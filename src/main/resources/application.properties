spring.application.name=api

#####################################################
# Configuração utilizando padrão YAML
# application.yml
#####################################################
#spring:
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/clinica
#    username: root
#    password: root
#####################################################

spring.datasource.url=jdbc:mysql://localhost/vollmed_api
spring.datasource.username=root
spring.datasource.password=9865

# Não enviar o stacktrace quando a API apresentar um erro.
server.error.include-stacktrace=never

# Setando variável de ambiente para o secret para gerar token JWT
# A aplicação vai tentar buscar o valor nas variáveis de ambiente e se não achar usa o que está depois dos :
api.security.token.secret=${JWT_SECRET:123456789}

# Mostra os comandos sql
spring.jpa.show-sql=true
# Formata os comandos sql para ficar melhor para leitura
spring.jpa.properties.hibernate.format_sql=true

# Caso o spring boot não reconheça o Driver do mysql adicionar a configuração:
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ResponseEntity
# Os nomes padrões dos parametros do Pageble podem ser alterados para outros valores como a definição abaixo
# Assim as URLs teriam os parâmetros por ex.: ?pagina=1&tamanho=10&ordem=nome
#spring.data.web.pageable.page-parameter=pagina
#spring.data.web.pageable.size-parameter=tamanho
#spring.data.web.sort.sort-parameter=ordem